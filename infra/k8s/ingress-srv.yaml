apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/websocket-services: "socket-handler-srv"
    nginx.ingress.kubernetes.io/server-snippets: |
      location /ws/ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
      }
spec:
  ingressClassName: "nginx"
  rules:
    - host: ag.dev
      http:
        paths:
          - path: /api/auth/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: auth-srv
                port:
                  number: 3000
          - path: /api/users/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: users-srv
                port:
                  number: 3000
          - path: /ws/notifications/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: notifications-srv
                port:
                  number: 3000
          - path: /ws/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: socket-handler-srv
                port:
                  number: 3000
          - path: /?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: client-srv
                port:
                  number: 80
